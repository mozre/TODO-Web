{
    "swagger": "2.0",
    "info": {
        "description": "",
        "version": "1.0.0",
        "title": "Swagger Petstore",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "jing.zhan@ck-telecom.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "api.todo.com",
    "basePath": "/todo",
    "tags": [
        {
            "name": "user",
            "description": "Operations about user",
            "externalDocs": {
                "description": "Find out more about our store",
                "url": "http://swagger.io"
            }
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/user": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "This can only be done by the logged in user.",
                "operationId": "createUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "300": {
                        "description": "username was existed in database"
                    }
                }
            }
        },
        "/user/login": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs user into the system",
                "description": "",
                "operationId": "loginUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The user name for login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password for login in clear text",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UserInfo"
                        },
                        "headers": {
                            "X-Rate-Limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "calls per hour allowed by the user"
                            },
                            "X-Expires-After": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date in UTC when token expires"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs out current logged in user session",
                "description": "",
                "operationId": "logoutUser",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "确认登出用户",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/user/{username}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user by user name",
                "description": "",
                "operationId": "getUserByName",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Updated user",
                "description": "This can only be done by the logged in user.",
                "operationId": "updateUser",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "name that need to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful"
                    },
                    "400": {
                        "description": "Invalid user supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteUser",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful"
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/project/plan": {
            "get": {
                "summary": "http://10.120.1.135:8082/todo/project/plan?usename=mozre&token=token&sprint=4&status=0",
                "description": "获取当前所有人的plan\n",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "确定用户",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "判断当前用户是否是处于active状态",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sprint",
                        "in": "query",
                        "description": "指定获取的sprint",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "指定获取的状态的plan",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponsePlan"
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "project"
                ],
                "summary": "http://10.120.1.135:8082/todo/project/plan",
                "description": "添加一个计划",
                "operationId": "addplan",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "info about new plan",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestPlan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid form"
                    }
                }
            }
        },
        "/projcet/task": {
            "get": {
                "summary": "http://10.120.1.135:8082/todo/project/task?username=mozre&token=token",
                "description": "\"获取plan下的task\"\n",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "确定用户",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "判断当前用户是否是处于active状态",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "planid",
                        "in": "query",
                        "description": "获取指定plan的task",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "project"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseTask"
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "project"
                ],
                "summary": "http://10.120.1.135:8082/todo/project/task",
                "description": "添加一个任务",
                "operationId": "add task",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "info about new task",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success operation"
                    },
                    "405": {
                        "description": "Invalid form"
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "mem_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "mem_name": {
                    "type": "string"
                },
                "mem_email": {
                    "type": "string"
                },
                "mem_password": {
                    "type": "string"
                },
                "mem_phone": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "User"
            }
        },
        "UserInfo": {
            "type": "object",
            "properties": {
                "mem_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "mem_name": {
                    "type": "string"
                },
                "mem_email": {
                    "type": "string"
                },
                "mem_password": {
                    "type": "string"
                },
                "mem_phone": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "UserInfo"
            }
        },
        "PlanSim": {
            "type": "object",
            "properties": {
                "plan_name": {
                    "type": "string"
                },
                "plan_decription": {
                    "type": "string"
                },
                "plan_deadline": {
                    "type": "string"
                },
                "plan_status": {
                    "type": "integer"
                }
            }
        },
        "ResponsePlan": {
            "type": "object",
            "properties": {
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PlanSim"
                    }
                }
            }
        },
        "TaskSim": {
            "type": "object",
            "properties": {
                "task_title": {
                    "type": "string"
                },
                "task_description": {
                    "type": "string"
                },
                "task_priority": {
                    "type": "integer"
                },
                "task_status": {
                    "type": "integer"
                },
                "task_end_time": {
                    "type": "integer"
                }
            }
        },
        "ResponseTask": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaskSim"
                    }
                }
            }
        },
        "Task": {
            "type": "object",
            "properties": {
                "men_id": {
                    "type": "integer"
                },
                "task_title": {
                    "type": "string"
                },
                "task_content": {
                    "type": "string"
                },
                "task_type": {
                    "type": "integer"
                },
                "task_prioirty": {
                    "type": "integer"
                },
                "task_status": {
                    "type": "integer"
                },
                "task_start_time": {
                    "type": "string"
                },
                "task_end_time": {
                    "type": "string"
                },
                "task_pridict_time": {
                    "type": "string"
                },
                "task_remind_time": {
                    "type": "string"
                },
                "task_real_spend_time": {
                    "type": "string"
                },
                "task_update-time": {
                    "type": "string"
                }
            }
        },
        "RequestTask": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "task": {
                    "$ref": "#/definitions/Task"
                }
            }
        },
        "Plan": {
            "type": "object",
            "properties": {
                "mem_id": {
                    "type": "integer"
                },
                "project_id": {
                    "type": "integer"
                },
                "plan_name": {
                    "type": "string"
                },
                "plan_description": {
                    "type": "string"
                },
                "plan_start_time": {
                    "type": "string"
                },
                "plan_end_time": {
                    "type": "string"
                },
                "plan_create_time": {
                    "type": "string"
                },
                "plan_latest_update_time": {
                    "type": "string"
                },
                "plan_state": {
                    "type": "integer",
                    "format": "int32"
                },
                "plan_real_spend_time": {
                    "type": "string"
                },
                "sprint": {
                    "type": "integer",
                    "format": "int32"
                },
                "plan_acomplish_progress": {
                    "type": "string"
                }
            }
        },
        "RequestPlan": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "task": {
                    "$ref": "#/definitions/Plan"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}